{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Steven Damouni\\\\coding\\\\SpringBoard-Exercises\\\\react-2\\\\snack-or-booze\\\\src\\\\NewFoodForm.js\";\nimport React, { useState } from \"react\";\nimport uuid from \"uuid/v4\";\n/** Form for creating a new item to add to a list.\r\n *\r\n * Has state for the name/quantity of the item; on submission,\r\n * sends {name, qty} to fn rec'd from parent.\r\n *\r\n */\n\nfunction NewSnackForm({\n  addMenuItem\n}) {\n  const [formData, setFormData] = useState({\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    recipe: \"\",\n    serve: \"\"\n  });\n  /** Send {name, quantity} to parent\r\n   *    & clear form. */\n\n  /** Update local state w/curr state of input elem */\n\n  const handleChange = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormData(fData => ({ ...fData,\n      [name]: value\n    }));\n  };\n\n  const getData = evt => {\n    evt.preventDefault();\n    addBox({ ...formData,\n      id: uuid()\n    });\n    setFormData({\n      height: \"\",\n      width: \"\",\n      backgroundColor: \"\"\n    });\n  };\n  /** render form */\n\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: getData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Name of Item:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"string\",\n    id: \"name\",\n    name: \"name\",\n    value: formData.name,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Description:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"string\",\n    id: \"description\",\n    name: \"description\",\n    value: formData.description,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"recipe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Color:\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"recipe\",\n    name: \"recipe\",\n    value: formData.recipe,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"serve\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Color:\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"serve\",\n    name: \"serve\",\n    value: formData.serve,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Add a new snack!\"));\n}\n\n;\nexport default NewSnackForm;","map":{"version":3,"sources":["C:/Users/Steven Damouni/coding/SpringBoard-Exercises/react-2/snack-or-booze/src/NewFoodForm.js"],"names":["React","useState","uuid","NewSnackForm","addMenuItem","formData","setFormData","id","name","description","recipe","serve","handleChange","evt","value","target","fData","getData","preventDefault","addBox","height","width","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEE,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAuC;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC;AACvCM,IAAAA,EAAE,EAAE,EADmC;AAEvCC,IAAAA,IAAI,EAAE,EAFiC;AAGvCC,IAAAA,WAAW,EAAE,EAH0B;AAIvCC,IAAAA,MAAM,EAAE,EAJ+B;AAKvCC,IAAAA,KAAK,EAAE;AALgC,GAAD,CAAxC;AAQF;AACF;;AAEE;;AAEA,QAAMC,YAAY,GAAGC,GAAG,IAAI;AAC1B,UAAM;AAAEL,MAAAA,IAAF;AAAQM,MAAAA;AAAR,QAAiBD,GAAG,CAACE,MAA3B;AACAT,IAAAA,WAAW,CAACU,KAAK,KAAK,EACpB,GAAGA,KADiB;AAEpB,OAACR,IAAD,GAAQM;AAFY,KAAL,CAAN,CAAX;AAID,GAND;;AASA,QAAMG,OAAO,GAAGJ,GAAG,IAAI;AACrBA,IAAAA,GAAG,CAACK,cAAJ;AACAC,IAAAA,MAAM,CAAC,EAAE,GAAGd,QAAL;AAAeE,MAAAA,EAAE,EAAEL,IAAI;AAAvB,KAAD,CAAN;AACAI,IAAAA,WAAW,CAAC;AAAEc,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE,EAArB;AAAyBC,MAAAA,eAAe,EAAE;AAA1C,KAAD,CAAX;AACD,GAJD;AAKA;;;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEL,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,EAAE,EAAC,MAFL;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEZ,QAAQ,CAACG,IAJlB;AAKE,IAAA,QAAQ,EAAEI,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAUE;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,eAWE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,EAAE,EAAC,aAFL;AAGE,IAAA,IAAI,EAAC,aAHP;AAIE,IAAA,KAAK,EAAEP,QAAQ,CAACI,WAJlB;AAKE,IAAA,QAAQ,EAAEG,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAmBE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF,eAoBE;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAEP,QAAQ,CAACK,MAHlB;AAIE,IAAA,QAAQ,EAAEE,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,eA2BE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BF,eA4BE;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEP,QAAQ,CAACM,KAHlB;AAIE,IAAA,QAAQ,EAAEC,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BF,eAoCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBApCF,CADF;AAwCD;;AAAA;AAED,eAAeT,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport uuid from \"uuid/v4\";\r\n\r\n/** Form for creating a new item to add to a list.\r\n *\r\n * Has state for the name/quantity of the item; on submission,\r\n * sends {name, qty} to fn rec'd from parent.\r\n *\r\n */\r\n\r\n  function NewSnackForm({ addMenuItem }) {\r\n    const [formData, setFormData] = useState({\r\n      id: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      recipe: \"\",\r\n      serve: \"\"\r\n    });\r\n\r\n  /** Send {name, quantity} to parent\r\n   *    & clear form. */\r\n\r\n  /** Update local state w/curr state of input elem */\r\n\r\n  const handleChange = evt => {\r\n    const { name, value }= evt.target;\r\n    setFormData(fData => ({\r\n      ...fData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  \r\n  const getData = evt => {\r\n    evt.preventDefault();\r\n    addBox({ ...formData, id: uuid() });\r\n    setFormData({ height: \"\", width: \"\", backgroundColor: \"\" });\r\n  };\r\n  /** render form */\r\n\r\n  return (\r\n    <form onSubmit={getData}>\r\n      <label htmlFor=\"name\">Name of Item:</label>\r\n      <input\r\n        type=\"string\"\r\n        id=\"name\"\r\n        name=\"name\"\r\n        value={formData.name}\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <label htmlFor=\"description\">Description:</label>\r\n      <input\r\n        type=\"string\"\r\n        id=\"description\"\r\n        name=\"description\"\r\n        value={formData.description}\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <label htmlFor=\"recipe\">Color:</label>\r\n      <input\r\n        id=\"recipe\"\r\n        name=\"recipe\"\r\n        value={formData.recipe}\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <label htmlFor=\"serve\">Color:</label>\r\n      <input\r\n        id=\"serve\"\r\n        name=\"serve\"\r\n        value={formData.serve}\r\n        onChange={handleChange}\r\n      />\r\n\r\n    \r\n      <button>Add a new snack!</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewSnackForm;"]},"metadata":{},"sourceType":"module"}