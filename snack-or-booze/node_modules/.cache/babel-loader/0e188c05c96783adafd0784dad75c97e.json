{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Steven Damouni\\\\coding\\\\SpringBoard-Exercises\\\\react-2\\\\snack-or-booze\\\\src\\\\NewFoodForm.js\";\nimport React, { useState } from \"react\";\nimport { Card, CardBody, CardTitle, CardText } from \"reactstrap\";\nimport uuid from \"uuid/v4\";\n/** Form for creating a new item to add to a list.\r\n *\r\n * Has state for the name/quantity of the item; on submission,\r\n * sends {name, qty} to fn rec'd from parent.\r\n *\r\n */\n\nfunction NewSnackForm({\n  addMenuItem\n}) {\n  const [formData, setFormData] = useState({\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    recipe: \"\",\n    serve: \"\"\n  });\n  /** Send {name, quantity} to parent\r\n   *    & clear form. */\n\n  /** Update local state w/curr state of input elem */\n\n  const handleChange = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormData(fData => ({ ...fData,\n      [name]: value\n    }));\n  };\n\n  const getData = evt => {\n    evt.preventDefault();\n    addMenuItem({ ...formData,\n      id: uuid()\n    });\n    setFormData({\n      name: \"\",\n      description: \"\",\n      recipe: \"\",\n      serve: \"\"\n    });\n  };\n  /** render form */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"What new Snack do you want?\"), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Your imagination is the limit for snacks...\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: getData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"Name of Item:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"string\",\n    id: \"name\",\n    name: \"name\",\n    value: formData.name,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"Description:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"string\",\n    id: \"description\",\n    name: \"description\",\n    value: formData.description,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"recipe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"Color:\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"recipe\",\n    name: \"recipe\",\n    value: formData.recipe,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"serve\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"Color:\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"serve\",\n    name: \"serve\",\n    value: formData.serve,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"Add a new snack!\")))));\n}\n\n;\nexport default NewSnackForm;","map":{"version":3,"sources":["C:/Users/Steven Damouni/coding/SpringBoard-Exercises/react-2/snack-or-booze/src/NewFoodForm.js"],"names":["React","useState","Card","CardBody","CardTitle","CardText","uuid","NewSnackForm","addMenuItem","formData","setFormData","id","name","description","recipe","serve","handleChange","evt","value","target","fData","getData","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n} from \"reactstrap\";\r\nimport uuid from \"uuid/v4\";\r\n\r\n/** Form for creating a new item to add to a list.\r\n *\r\n * Has state for the name/quantity of the item; on submission,\r\n * sends {name, qty} to fn rec'd from parent.\r\n *\r\n */\r\n\r\n  function NewSnackForm({ addMenuItem }) {\r\n    const [formData, setFormData] = useState({\r\n      id: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      recipe: \"\",\r\n      serve: \"\"\r\n    });\r\n\r\n  /** Send {name, quantity} to parent\r\n   *    & clear form. */\r\n\r\n  /** Update local state w/curr state of input elem */\r\n\r\n  const handleChange = evt => {\r\n    const { name, value }= evt.target;\r\n    setFormData(fData => ({\r\n      ...fData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  \r\n  const getData = evt => {\r\n    evt.preventDefault();\r\n    addMenuItem({ ...formData, id: uuid() });\r\n    setFormData({ name: \"\", description: \"\", recipe: \"\", serve: \"\" });\r\n  };\r\n  /** render form */\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle>\r\n            What new Snack do you want?\r\n          </CardTitle>\r\n          <CardText>\r\n            Your imagination is the limit for snacks...\r\n          </CardText>\r\n            <form onSubmit={getData}>\r\n              <label htmlFor=\"name\">Name of Item:</label>\r\n              <input\r\n                type=\"string\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <label htmlFor=\"description\">Description:</label>\r\n              <input\r\n                type=\"string\"\r\n                id=\"description\"\r\n                name=\"description\"\r\n                value={formData.description}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <label htmlFor=\"recipe\">Color:</label>\r\n              <input\r\n                id=\"recipe\"\r\n                name=\"recipe\"\r\n                value={formData.recipe}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <label htmlFor=\"serve\">Color:</label>\r\n              <input\r\n                id=\"serve\"\r\n                name=\"serve\"\r\n                value={formData.serve}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <button>Add a new snack!</button>\r\n            </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewSnackForm;"]},"metadata":{},"sourceType":"module"}